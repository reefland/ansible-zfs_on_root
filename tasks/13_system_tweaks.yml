---
# [ System Tweaks Block ]######################################################
- name: System Tweaks Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - system_tweaks
  block:

    - name: If enabled set ZFS import delay in /etc/default/zfs
      ansible.builtin.blockinfile:
        path: "{{ live_cd_mountpoint }}/etc/default/zfs"
        marker: "# Added by Ansible Initial install"
        block: |
          ZFS_INITRD_POST_MODPROBE_SLEEP='10'
          ZFS_INITRD_PRE_MOUNTROOT_SLEEP='10'
      when:
        - zfs_pool_import_delay_enabled | default( false) | bool

    # - name: Setup /tmp to use tmpfs
    #   ansible.builtin.copy:
    #     src: "{{ live_cd_mountpoint }}/usr/share/systemd/tmp.mount"
    #     dest: "{{ live_cd_mountpoint }}/etc/systemd/system/tmp.mount"
    #     mode: "0644"
    #     remote_src: true

    - name: Run chroot command enable tmpfs on /tmp
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c 'systemctl enable /usr/share/systemd/tmp.mount'"
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Run chroot commands to add system groups
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "addgroup --system lpadmin"
        - "addgroup --system lxd"
        - "addgroup --system sambashare"

    - name: Create /etc/skel/.ssh directory
      ansible.builtin.file:
        path: "{{ live_cd_mountpoint }}/etc/skel/.ssh"
        mode: "0700"
        state: directory

    - name: Run chroot command to install basic applications
      ansible.builtin.command:
        "{{ chroot_cmd }} bash -c
        'apt-get install --yes openssh-server avahi-daemon libnss-mdns python3 python3-apt'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      when:
        - ansible_os_family == "Debian"

    - name: Copy Avahi SSH service file into place
      ansible.builtin.copy:
        src: "{{ live_cd_mountpoint }}/usr/share/doc/avahi-daemon/examples/ssh.service"
        dest: "{{ live_cd_mountpoint }}/etc/avahi/services"
        mode: "0644"
        remote_src: true

    - name: Install ZFS Service Templates
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ live_cd_mountpoint }}/etc/systemd/system/{{ item }}"
        owner: root
        group: root
        mode: '0644'
      with_items:
        - zpool-trim@.service   # ZFS zpool trim service
        - zpool-trim@.timer     # ZFS zpool trim service timer unit
        - zpool-scrub@.service  # ZFS zpool scrub service
        - zpool-scrub@.timer    # ZFS zpool scrub service timer unit

    - name: Run chroot commands to enable ZFS Trim Services
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "systemctl enable zpool-trim@{{ root_pool_name }}.service"
        - "systemctl enable zpool-trim@{{ root_pool_name }}.timer"
      when:
        - zfs_pool_trim_systemd_service_enable | default( false) | bool

    - name: Run chroot commands to enable ZFS Scrub Service
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "systemctl enable zpool-scrub@{{ root_pool_name }}.service"
        - "systemctl enable zpool-scrub@{{ root_pool_name }}.timer"
      when:
        - zfs_pool_scrub_systemd_service_enable | default( false) | bool

###############################################################################
# [ ZFS Encryption Unlock Script and Unit File Block ]#########################
- name: ZFS Encryption Unlock Script and Unit File Block
  when:
    - root_pool_encryption | default(false)
    - ansible_nodename != "localhost"
  tags:
    - system_tweaks
  block:
    - name: ZFS encryption script to load the keyfile
      ansible.builtin.template:
        src: "zfs-multi-mount.sh.j2"
        dest: "{{ live_cd_mountpoint }}/usr/bin/zfs-multi-mount.sh"
        owner: root
        group: root
        mode: "755"

    - name: Install ZFS Service Templates for Encryption
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ live_cd_mountpoint }}/etc/systemd/system/{{ item }}"
        owner: root
        group: root
        mode: "644"
      with_items:
        - zfs-load-key.service  # ZFS encryption service to load keyfile

    - name: Run chroot commands to enable ZFS load key service
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "systemctl enable zfs-load-key.service"
