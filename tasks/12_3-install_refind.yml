---
# [ Install rEFInd Boot Manager ]##############################################
- name: Install rEFInd Boot Manager Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - install_refind
  block:

    # Mount /boot/efi directory in chroot environment
    - name: Run chroot command to mount /boot/efi directory
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c 'mount {{ efi_boot_mountpoint }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Run chroot command to install rEFInd Boot Manager
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "DEBIAN_FRONTEND=noninteractive apt-get install --yes refind"
        - "refind-install --yes"
        - "mkdir -p {{ zfs_boot_menu_path }}"
        - "mkdir -p {{ refind_path }}"
      when:
        - ansible_os_family == "Debian"

    - name: Copy rEFInd template to /mnt/boot/efi/EFI/zfsbootmenu/refind_linux.conf
      ansible.builtin.template:
        src: refind_linux.conf.j2
        dest: "{{ live_cd_mountpoint }}{{ zfs_boot_menu_path }}/refind_linux.conf"
        owner: "root"
        group: "root"
        mode: "0644"

    # If we're running under legacy bios then rEFInd will be installed
    # to /boot/efi/EFI/BOOT - we want it in /boot/efi/EFI/refind
    - name: Run chroot command to Move rEFInd if under Legacy BIOS
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "[ -e {{ efi_boot_path }}/BOOT ] &&
          mvrefind {{ efi_boot_path }}/BOOT {{ refind_path }} || true"

    - name: Reduce rEFIND boot menu timeout from 20 seconds to new value
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}{{ refind_path }}/refind.conf"
        regexp: '^timeout .*'
        replace: 'timeout {{ refind_boot_menu_timeout }}'

    - name: Copy Logo Images and Icons
      ansible.builtin.copy:
        src: "files/{{ item.source }}"
        dest: "{{ live_cd_mountpoint }}/{{ item.dest }}"
        owner: "root"
        group: "root"
        mode: "0644"
      with_items:
        - { source: "logo.jpg", dest: "{{ refind_path }}/" }
        - { source: "os_linux.png", dest: "{{ refind_path }}/icons/"}
      when:
        - refind_boot_menu_logo  | default(false)

    - name: Enable banner_scale for Logo Images
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}{{ refind_path }}/refind.conf"
        regexp: '^#banner_scale (.*$)'
        replace: 'banner_scale \1'
      when:
        - refind_boot_menu_logo  | default(false)

    - name: Set Banner Logo Images
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}{{ refind_path }}/refind.conf"
        regexp: '^#banner hostname.bmp(.*$)'
        replace: 'banner logo.jpg'
      when:
        - refind_boot_menu_logo  | default(false)

    - name: Copy startup script with multiple disks template to /mnt/boot/efi/startup.nsh
      ansible.builtin.template:
        src: startup.nsh.j2
        dest: "{{ live_cd_mountpoint }}/boot/efi/startup.nsh"
        owner: "root"
        group: "root"
        mode: "0644"
      when:
        - disk_by_id | length | int > 1
