---
# [ Install Dracut to Load ZFS ]###############################################
- name: Install Dracut to Load ZFS Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - install_dracut
  block:
    - name: Run chroot command to install dracut # noqa Ansible [YAML]
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "apt-get install --yes dracut-core zfs-dracut bsdmainutils gcc"
        - "apt-mark hold {{ packages_to_mark_hold | join(' ') }}"
      when:
        - ansible_os_family == "Debian"

    - name: Copy dracut template to /mnt/etc/dracut.conf.d/100-zol.conf
      ansible.builtin.template:
        src: dracut_100-zol.conf.j2
        dest: "{{ live_cd_mountpoint }}/etc/dracut.conf.d/100-zol.conf"
        owner: "root"
        group: "root"
        mode: "0644"

    # Fix zfs dracut - https://github.com/openzfs/zfs/issues/13398
    # Need gcc to get libgcc_s.so for dracut_install to work
    - name: Fix "/**/" to "/*/*/" within /usr/lib/dracut/modules.d/90zfs/module-setup.sh
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}/usr/lib/dracut/modules.d/90zfs/module-setup.sh"
        regexp: '\/\*\*\/'
        replace: '/*/*/'

# Fix zfs bootfs systemd services
# https://github.com/openzfs/zfs/pull/13585/files
# https://github.com/openzfs/zfs/issues/14475
# /usr/lib/dracut/modules.d/90zfs/zfs-rollback-bootfs.service
# /usr/lib/dracut/modules.d/90zfs/zfs-snapshot-bootfs.service
    - name: Fix zfs bootfs systemd services ExecStart
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}/usr/lib/dracut/modules.d/90zfs/{{ item }}"
        regexp: '^-ExecStart=(.*$)'
        replace: 'ExecStart=\1'
      with_items:
        - "zfs-snapshot-bootfs.service"
        - "zfs-rollback-bootfs.service"

    - name: Fix zfs bootfs systemd services Semicolon
      ansible.builtin.replace:
        path: "{{ live_cd_mountpoint }}/usr/lib/dracut/modules.d/90zfs/{{ item }}"
        regexp: '^(.*)BOOTFS" SNAPNAME(.*$)'
        replace: '\1BOOTFS"; SNAPNAME\2'
      with_items:
        - "zfs-snapshot-bootfs.service"
        - "zfs-rollback-bootfs.service"

    - name: Create /etc/cmdline.d directory
      ansible.builtin.file:
        path: "/etc/cmdline.d"
        mode: "0755"
        state: directory
