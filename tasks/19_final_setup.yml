---
# [ Update to Ubuntu Desktop if needed]####################################
- name: Update to Ubuntu Desktop Block
  when:
    - ansible_nodename != "localhost"
    - ansible_os_family == "Debian"
    - not command_line_only | default(false) | bool
  tags:
    - final_setup
    - update_2_desktop
  block:
    - name: Installing full GUI environment
      ansible.builtin.apt:
        name: ubuntu-desktop
        install_recommends: true

    - name: Disable initial setup dialog screen
      community.general.ini_file:
        path: /etc/gdm3/custom.conf
        section: daemon
        option: InitialSetupEnable
        value: "false"
        create: false

    - name: Removing original netplan configuration
      ansible.builtin.file:
        path: /etc/netplan/01-netcfg.yaml
        state: absent

    - name: Copy netplan with Network Manager template to /etc/netplan/01-network-manager-all.yaml
      ansible.builtin.template:
        src: netplan-network-manager.j2
        dest: /etc/netplan/01-network-manager-all.yaml
        owner: root
        group: root
        mode: '0600'

###############################################################################
# [ Disable IPv6 Networking ]##################################################
- name: Disable IPv6 Networking Block
  when:
    - ipv6.disable | default(false) | bool
    - ansible_nodename != "localhost"
  tags:
    - final_setup
    - disable_ipv6
  block:
    - name: Disable IPv6 Networking
      ansible.builtin.lineinfile:
        path: "{{ ipv6.conf_file }}"
        line: "{{ item }}"
        state: present
      loop: "{{ ipv6.disable_settings }}"
      loop_control:
        label: "{{ item }}"

    - name: Apply Updated IPv6 Setting
      ansible.builtin.command:
        cmd: "{{ ipv6.apply_cmd }}"
      register: cmd_output
      changed_when: cmd_output.rc == 0

###############################################################################
# [Install SMTP msmtp-mailer Client ]##########################################
# https://galaxy.ansible.com/chriswayg/msmtp-mailer
- name: Install MSMTP Mailer Client Block
  when:
    - msmtp.enabled | default(false) | bool
  tags:
    - final_setup
    - install_msmtp
  block:
    - name: Install MSMTP Mailer Client
      ansible.builtin.include_role:
        name: chriswayg.msmtp-mailer
        apply:
          tags:
            - mail
      vars:
        msmtp_default_account: "{{ msmtp.msmtp_default_account }}"
        msmtp_domain: "{{ msmtp.msmtp_domain }}"
        msmtp_accounts: "{{ msmtp.accounts }}"
        msmtp_alias_default: "{{ msmtp.msmtp_alias_default }}"
        msmtp_alias_root: "{{ msmtp.msmtp_alias_root | default(msmtp.msmtp_alias_default) }}"
        smtp_alias_cron: "{{ msmtp.msmtp_alias_cron | default(msmtp.msmtp_alias_default) }}"
        msmtp_log: "file"
        msmtp_logfile: /var/log/msmtp.log
        msmtprc_owner: "root"
        msmtprc_group: "root"
        msmtprc_mode: "0600"

    # Enable ZFS Email Notifications
    - name: Modify ZFD for Email Notifications
      ansible.builtin.replace:
        path: "/etc/zfs/zed.d/zed.rc"
        regexp: '{{ find_values.regexp }}'
        replace: '{{ find_values.replace }}'
      loop:
        - { regexp: '^ZED_EMAIL_ADDR.*',
            replace: 'ZED_EMAIL_ADDR="{{ msmtp.msmtp_alias_default }}"' }
        - { regexp: '(^#)?ZED_EMAIL_OPTS.*',
            replace: 'ZED_EMAIL_OPTS="-s ''@SUBJECT@'' @ADDRESS@ -r {{ secret_msmtp_send_from_email }}"' }
      loop_control:
        loop_var: find_values

###############################################################################
# [ Apply SSHD Settings ]######################################################
- name: Update SSHD Settings Block
  tags:
    - final_setup
    - update_sshd_settings
  block:
    - name: Update SSHD Settings
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: "^(#? ?)?{{ item.key }} +(yes|no|none|any|prohibit-password|[0-9]+|[0-9]+m)"
        replace: "{{ item.key }} {{ item.value }}"
        validate: "/usr/sbin/sshd -t -f %s"
      loop: "{{ apply_sshd_settings | dict2items }}"
      register: update_sshd
      notify:
        - Restart SSHD Server

###############################################################################
# [ Final Setup ]##############################################################
- name: Final Setup Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - final_setup
  block:

    - name: Install any remaining packages defined
      ansible.builtin.apt:
        pkg: "{{ additional_install_packages }}"
        state: present
        install_recommends: false
      when:
        - ansible_os_family == "Debian"

    # Set apt/dpkg to automagically snap the system datasets on install/remove
    - name: Copy apt 30pre-snap to /etc/apt/apt.conf.d/30pre-snap
      ansible.builtin.template:
        src: apt_30pre-snap.j2
        dest: /etc/apt/apt.conf.d/30pre-snap
        owner: root
        group: root
        mode: '0644'

    - name: Update timezone setting
      ansible.builtin.command:
        cmd: "timedatectl set-timezone {{ timezone_value }}"
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Disable root password
      ansible.builtin.user:
        name: 'root'
        password: '*'

    # [ Switch Log Compression to ZFS Compression ]############################
    - name: Locate Existing Log Files
      ansible.builtin.find:
        paths: /etc/logrotate.d
        patterns: "*"
      register: files_matched

    - name: Disable the log compression in each file so ZFS does the Log Compression
      ansible.builtin.replace:
        path: "{{ item.path }}"
        regexp: (^|[^#y])(compress)
        replace: '\1#\2'
      with_items: "{{ files_matched.files }}"
      loop_control:
        label: "{{ item.path }}"

    # [ Create System Snapshot Before Reboot ]#################################
    # If a base_install snapshot does not exist, create one
    - name: Create base_install snapshot
      ansible.builtin.shell:
        cmd: >
          zfs get type {{ root_pool_dataset_path }}@base_install || zfs snapshot {{
          root_pool_dataset_path }}@base_install
      register: cmd_output
      changed_when: cmd_output.rc == 0
      when:
        - take_base_install_snapshot | default(false) | bool

###############################################################################
